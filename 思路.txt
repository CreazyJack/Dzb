1. 存储
使用 react native storage 插件，配置后对 tag 进行存储，存储之前应该先使用 getItem 取出总数据，然后对其中的列表数据进行操作，最后使用 setItem 覆盖保存。
在新建 tag 页面，存储时判断，是否存在相同 id，false 则在 catch 中 save 数据。
在新建想法页面，先取出 id 中的所有 key，返回数组，然后判断数组中是否有相同的，false 则 save 数据

因为联网应用的数据存储在网上，修改时上传数据，修改数据，下载数据
而本地应用数据则应该存储在本地，新建对象或者数组数据，然后使用持久化存储，修改时获取本地数据，修改本地数据，得到本地数据
所以，我要先存储一个 listData 数组，来存储所有的标签和笔记数据，存储一个 userData 数组，储存所有的个人信息和个人设置数据

或者，直接使用 persist，将被修改的数据和修改内容以及索引全部传到 action 中的方法里

tag 数据结构： 
  [
    {
      name: ,
      color: ,
      noteList: [
        {
          text: ,
          color: 
        }
      ]
    },
  ]
user 数据结构:
 {
   color: ,
   tagFontSize: ,
   noteFontSize: ,
 }
2. 尾部添加组件
使用循环判断该 id 存储中有没有 name = '添加'（不行，这样做行不通）

3. 更换 tag 颜色
使用 modal 配合存储，导航刷新

4. 字体大小

5. 字体更换

6. 常用标记

7. 添加想法
使用 flatList 传入的 item 和 index 配合 storage 实现同 id 的 数组存储
使用 willFocus 或许是页面刷新的好方法

8. 批量删除
长按出现多条目编辑菜单，并且每项 box 的左上角出现复选框，
点击则在数组中添加它的 index，再次点击则在数组中删除它的 index，
点击删除，则在 redux 中的数组中删除相应 index 的数据

在 state 中添加判断，长按则改为 true，
相应的点击方法也用 if 进入点击则添加索引，再点则删除索引的部分，
每个 box 的左上角出现一个复选框
下面弹出一个批量操作的选项框，有 删除 和 取消两个图标

或者不设置批量操作，仅仅在每个 box 的长按事件中弹出编辑菜单，有编辑，删除，返回三个按钮